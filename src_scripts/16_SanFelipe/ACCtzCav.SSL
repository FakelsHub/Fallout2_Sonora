#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_ACCtzCav
#define TOWN_REP_VAR                    GVAR_TOWN_REP_SAN_FELIPE // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_SANFELIPE_CTZN   // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_HERMO_SOLDIER      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      35 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure uninjure_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeSndDialog;
procedure NodeRun;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;

//---------------------

//#define LVAR_Flag_A                     (5) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_injure_start(0,0,0,0,1) // травмировать (отметить нужное цифрой 1): a - левая рука, b - правая рука, c - левая нога, d - правая нога, e - слепота
       if (get_Medic_Quest == 0) then begin
          reg_anim_clear(self_obj);
          reg_anim_begin();
          reg_anim_animate(self_obj,ANIM_fall_back_sf,-1);
          reg_anim_end();
          critter_injure(self_obj, DAM_KNOCKED_DOWN);
       end
       if (getQuest(GVAR_SANFELIPE_STATUS_CTZNCAVE) >= qEnd) then begin
          rm_timer_event(self_obj);
          set_obj_visibility(self_obj, 1);
       end
   end
end

procedure map_update_p_proc begin
   set_injure_update(100,102)
   if (getQuest(GVAR_SANFELIPE_STATUS_CTZNCAVE) == qStart) then begin
      if (self_elevation == 0) then begin
      //!!! опыт
      //!!! репутация?
      //!!! фраза спасибо за спасение
      //??? а может просто переходить в поселение и там завершать квест?
      setQuest(GVAR_SANFELIPE_STATUS_CTZNCAVE, qEnd);
      end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       //timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       reg_anim_clear(self_obj);
       reg_anim_begin();
       reg_anim_animate(self_obj,ANIM_back_to_standing,-1);
       reg_anim_end();
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (global_var(GVAR_SANFELIPE_STATUS_CTZNCAVE) == 1) then begin
   partyRunToDude
   end
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   UsedToCrit_Stimpak_Doctor
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
   if (action_being_used == SKILL_FIRST_AID) then begin
       if (has_skill(dude_obj, SKILL_FIRST_AID) < 50) then begin
       script_overrides;
       skill_display_mstr(103,SKILL_FIRST_AID,50)
       end
       else begin
       //!!! лечение
       end
   end
   skillUseDoctor(0)
end

procedure uninjure_proc begin
   add_timer_event(self_obj, 10, 3);
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   setQuest(GVAR_SANFELIPE_STATUS_CTZNCAVE, qStop);
   kill_critter_opt
end

procedure talk_p_proc begin
   if (get_Medic_Quest == 0) then begin
      floater(self_obj,110,COLOR_MSG_RED);
      display_mstr(111);
   end
   else if (getQuest(GVAR_SANFELIPE_STATUS_CTZNCAVE) >= qEnd) then begin
      floater(self_obj,112,COLOR_MSG_GREEN);
   end
   else begin
      setReaction(1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
      dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(207,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(208)
   NAnswer(209,1,Node999)
   NAnswer(217,1,Node999)
end

procedure NodeSndDialog begin
   Reply(200)
   NAnswer(210,1,NodeAnswer101)
   NAnswer(212,4,NodeAnswer102)
   NAnswer(214,7,NodeAnswer103)
   if (getQuest(GVAR_SANFELIPE_STATUS_CTZNCAVE) == qZero) then begin
   NAnswer(214,7,NodeRun)
   end
   NAnswer(201,1,Node999)
end

procedure NodeRun begin
   setQuest(GVAR_SANFELIPE_STATUS_CTZNCAVE, qStart);
   Reply(211)
   NAnswer(201,1,Node999)
end

procedure NodeAnswer101 begin
   Reply(211)
   NAnswer(201,1,Node999)
end

procedure NodeAnswer102 begin
   Reply(213)
   NAnswer(214,1,Node999)
end

procedure NodeAnswer103 begin
   Reply(216)
   NAnswer(214,1,Node999)
end
